:host {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: #f4f7f9;
  overflow: hidden;
}

.dashboard-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.main-toolbar {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 10;
}

.connection-status {
  display: flex;
  align-items: center;
  gap: 8px;
  font-weight: 500;
}

.status-icon {
  font-size: 24px;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;

  &.connected { color: #4caf50; }
  &.connecting { color: #ffc107; }
  &.error, &.disconnected { color: #f44336; }
}

.toolbar-spacer {
  flex: 1 1 auto;
}

button[mat-stroked-button] {
  border-color: rgba(255, 255, 255, 0.7);
  color: white;
}

.main-content {
  flex: 1;
  display: flex;
  gap: 1rem;
  padding: 1rem;
  overflow: hidden;
}

// Left Panel Layout
.left-panel {
  flex: 0 0 380px;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow: hidden; // Parent controls layout

  // Container for the device list
  .device-list-container {
    flex: 1; // Takes up available space
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    overflow-y: auto; // Allows internal scrolling
    display: flex;
    flex-direction: column;
  }

  // Container for the new topic manager
  .topic-manager-container {
    flex: 0 0 auto; // Takes only the space it needs
    max-height: 40%; // Limit its maximum height
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    display: flex;
    flex-direction: column;
    overflow-y: auto;
  }
}

// Right Panel Layout
.right-panel {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.right-panel-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  height: 100%;
}

.publisher-container,
.monitor-container {
  background: white;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  display: flex;
  flex-direction: column;
  overflow: hidden; // Child component will manage its own scroll
}

.publisher-container {
  flex: 0 0 auto;
}

.monitor-container {
  flex: 1;
  overflow-y: auto;
}
